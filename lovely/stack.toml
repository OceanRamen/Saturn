[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.module]
source = 'stack.lua'
before = 'main.lua'
name = 'stack'

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = localize{type = 'variable', key = 'a_xmult', vars = {G.P_CENTERS.v_observatory.config.extra}},"
position = "at"
payload = "message = localize{type = 'variable', key = 'a_xmult', vars = {math.floor((G.P_CENTERS.v_observatory.config.extra^((self.stack or {}).count or 1)) * 100)/100}},"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "Xmult_mod = G.P_CENTERS.v_observatory.config.extra"
position = "at"
payload = "Xmult_mod = G.P_CENTERS.v_observatory.config.extra^((self.stack or {}).count or 1)"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local card = copy_card(pseudorandom_element(G.consumeables.cards, pseudoseed('perkeo')), nil)"
position = "at"
payload = """
local cards = {}
local map = {}
for k, v in pairs(G.consumeables.cards) do
  table.insert(cards, {sort_id = v.sort_id})
  map[v.sort_id] = v
  if v.stack then
    if #v.stack.items > 0 then
      for _, i in pairs(v.stack.items) do
        table.insert(cards, {sort_id = i})
        map[i] = v
      end
    end
  end
end
local card_id = pseudorandom_element(cards, pseudoseed('perkeo'))
local card_template = map[card_id.sort_id]
local card = copy_card(card_template, nil)
card.ignoreStack = false
"""
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.children.use_button and self.highlighted then self.children.use_button:draw() end"
position = "before"
payload = """
if self.children.stackActionButtons and self.highlighted then
  self.children.stackActionButtons:draw()
end
"""
overwrite = false
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = """if k ~= 'focused_ui' and k ~= "front" and k ~= "back" and k ~= "soul_parts" and k ~= "center" and k ~= 'floating_sprite' and k~= "shadow" and k~= "use_button" and k ~= 'buy_button' and k ~= 'buy_and_use_button' and k~= "debuff" and k ~= 'price' and k~= 'particles' and k ~= 'h_popup' then v:draw() end"""
position = "at"
payload = """
if k~='stackActionButtons'and k ~= 'focused_ui' and k ~= "front" and k ~= "back" and k ~= "soul_parts" and k ~= "center" and k ~= 'floating_sprite' and k~= "shadow" and k~= "use_button" and k ~= 'buy_button' and k ~= 'buy_and_use_button' and k~= "debuff" and k ~= 'price' and k~= 'particles' and k ~= 'h_popup' then v:draw() end
"""
match_indent = true
